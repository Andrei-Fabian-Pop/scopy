cmake_minimum_required(VERSION 3.9.6)

project(gui LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)

# As the include/src files are split this does not work we will need to manually
# wrap cpp files
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets Test Concurrent Xml REQUIRED)
find_package(
    Qt${QT_VERSION_MAJOR} COMPONENTS Widgets Test Concurrent Xml REQUIRED
)

# disable signal/slots from QT to not colide with sigcpp
add_definitions(-DQT_NO_KEYWORDS)

# Find libiio and link it to the targets generated by this project
find_library(IIO_LIBRARIES NAMES iio libiio)
find_path(IIO_INCLUDE_DIRS iio.h)

# add qwt, the findQwt script will create the qwt::qwt target containing all
# that is needed for qwt and qwtpolar
include(cmake/findQwt.cmake)

# ##############################################################################
# TBD - may be moved to core/app??

# set(CMAKE_VERBOSE_MAKEFILE TRUE)
find_package(Gnuradio "3.8" REQUIRED COMPONENTS runtime)

set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH};/usr/local/lib/cmake)
find_package(gnuradio-iio REQUIRED PATH_SUFFIXES iio)
find_package(gnuradio-scopy REQUIRED PATH_SUFFIXES scopy)
find_package(gnuradio-m2k REQUIRED PATH_SUFFIXES m2k)

add_definitions(-DBOOST_ALL_DYN_LINK)
find_package(Boost COMPONENTS system filesystem thread chrono REQUIRED)

find_package(libm2k REQUIRED)

find_package(PkgConfig)
pkg_check_modules(GLIB REQUIRED glib-2.0)
pkg_check_modules(GLIBMM REQUIRED glibmm-2.4)
pkg_check_modules(SIGCPP REQUIRED sigc++-2.0)
pkg_check_modules(LIBSIGROK_DECODE REQUIRED libsigrokdecode)
pkg_get_variable(LIBSIGROK_DECODERS_DIR libsigrokdecode decodersdir)

include_directories(
    ${Boost_INCLUDE_DIRS}
    ${LIBSIGROK_DECODE_INCLUDE_DIRS}
    ${GLIB_INCLUDE_DIRS}
    ${GLIBCONFIG_INCLUDE_DIRS}
    ${GLIBMM_INCLUDE_DIRS}
    ${GLIBMMCONFIG_INCLUDE_DIRS}
    ${SIGCPP_INCLUDE_DIRS}
    ${SIGCPPCONFIG_INCLUDE_DIRS}
)

link_directories(${Boost_LIBRARY_DIRS} ${GNURADIO_RUNTIME_LIBRARY_DIRS})
# ##############################################################################

add_library(
    gui SHARED
    # source files
    src/two_buttons_widget.cpp
    src/run_single_widget.cpp
    src/dynamic_widget.cpp
    src/subsection_separator.cpp
    src/settings_pair_widget.cpp
    src/custom_push_button.cpp
    src/spinbox_a.cpp
    src/completion_circle.cpp
    src/prefix_formatter.cpp
    src/custom_menu_button.cpp
    src/homepage_controls.cpp
    src/connect_dialog.cpp
    src/linked_button.cpp
    src/small_on_off_switch.cpp
    src/custom_animation.cpp
    src/animation_manager.cpp
    src/channel_widget.cpp
    src/custom_switch.cpp
    src/custom_plot_position_button.cpp
    src/colored_qwidget.cpp
    src/bitfield_widget.cpp
    src/theme_manager.cpp
    src/menu_header.cpp
    src/db_click_buttons.cpp
    src/cursor_readouts.cpp
    src/info_widget.cpp
    src/instrument_notes.cpp
    src/user_notes.cpp
    src/user_notes_api.cpp
    src/osc_custom_scroll.cpp
    src/stacked_homepage.cpp
    src/osc_import_settings.cpp
    src/osc_export_settings.cpp
    src/dropdown_switch_list.cpp
    src/comboBox_lineEdit.cpp
    src/checkbox_delegate.cpp
    src/scopy_color_editor.cpp
    src/start_stop_range_widget.cpp
    src/scopy_about_dialog.cpp
    src/cursors_settings.cpp
    src/channel_settings.cpp
    src/tool_launcher.cpp
    src/menu_anim.cpp
    src/tool_menu.cpp
    src/base_menu.cpp
    src/base_menu_item.cpp
    src/filter.cpp
    src/preferences.cpp
    src/tool_menu_item.cpp
    src/utils.cc
    src/tool.cpp
    src/detached_window.cpp
    src/detached_windows_manager.cpp
    src/measure_settings.cpp
    src/osc_general_settings.cpp
    src/trigger_settings.cpp
    src/scroll_filter.cpp
    src/signal_generator_menu.cpp
    src/power_supply_menu.cpp
    src/voltmeter_menu.cpp
    src/tool_view.cpp
    src/tool_view_builder.cpp
    src/test_tool.cpp
    src/spectrum_analyzer_sweep_menu.cpp
    src/spectrum_analyzer_general_menu.cpp
    src/spectrum_analyzer_add_reference_menu.cpp
    src/spectrum_analyzer_markers_menu.cpp
    src/spectrum_analyzer_channel_menu.cpp
    src/network_analyzer_general_menu.cpp
    src/network_analyzer_channel_menu.cpp
    src/logic_analyzer_channel_menu.cpp
    src/logic_pattern_trigger_menu.cpp
    src/logic_analyzer_general_menu.cpp
    src/pattern_generator_channel_menu.cpp
    src/pattern_generator_general_menu.cpp
    src/channel_manager.cpp
    src/generic_menu.cpp
    src/test_menu.cpp
    src/oscilloscope_plot.cpp
    src/TimeDomainDisplayPlot.cc
    src/measure.cpp
    src/graticule.cpp
    src/spectrumUpdateEvents.cc
    src/DisplayPlot.cc
    src/osc_adjuster.cpp
    src/extending_plot_zoomer.cpp
    src/printable_plot.cpp
    src/symbol_controller.cpp
    src/handles_area.cpp
    src/plot_picker_wrapper.cpp
    src/limited_plot_zoomer.cpp
    src/handles_area_extension.cpp
    src/painter_save_restore.cpp
    src/osc_scale_engine.cpp
    src/smooth_curve_fitter.cpp
    src/symbol.cpp
    src/plot_line_handle.cpp
    src/logicanalyzer/logic_data_curve.cpp
    src/logicanalyzer/annotation_curve.cpp
    src/logicanalyzer/generic_logic_plot_curve.cpp
    src/logic_tool.cpp
    src/logicanalyzer/annotation.cpp
    src/logicanalyzer/row.cpp
    src/logicanalyzer/row_data.cpp
    src/logicanalyzer/binding/binding_decoder.cpp
    src/logicanalyzer/annotation_decoder.cpp
    src/logicanalyzer/binding/binding.cpp
    src/logicanalyzer/logic_decoder.cpp
    src/logicanalyzer/prop/bool.cpp
    src/logicanalyzer/prop/double.cpp
    src/logicanalyzer/prop/enum.cpp
    src/logicanalyzer/prop/int.cpp
    src/logicanalyzer/prop/property.cpp
    src/logicanalyzer/prop/string.cpp
    src/FftDisplayPlot.cc
    src/ConstellationDisplayPlot.cc
    src/spectrum_marker.cpp
    src/average.cpp
    src/marker_controller.cpp
    src/HistogramDisplayPlot.cc
    # ui files
    ui/two_buttons_widget.ui
    ui/run_single_widget.ui
    ui/subsection_separator.ui
    ui/settings_pair_widget.ui
    ui/spinbox_a.ui
    ui/custom_menu_button.ui
    ui/homepage_controls.ui
    ui/connect_dialog.ui
    ui/channel_widget.ui
    ui/custom_plot_position_button.ui
    ui/bitfield_widget.ui
    ui/menu_header.ui
    ui/db_click_buttons.ui
    ui/info_widget.ui
    ui/instrument_notes.ui
    ui/note.ui
    ui/user_notes.ui
    ui/user_note_page.ui
    ui/osc_export_settings.ui
    ui/scopy_color_editor.ui
    ui/start_stop_range_widget.ui
    ui/scopy_about_dialog.ui
    ui/cursors_settings.ui
    ui/channel_settings.ui
    ui/tool_launcher.ui
    ui/base_menu.ui
    ui/base_menu_item.ui
    ui/preferences.ui
    ui/measure_settings.ui
    ui/osc_general_settings.ui
    ui/trigger_settings.ui
    ui/signal_generator_menu.ui
    ui/power_supply_menu.ui
    ui/voltmeter_menu.ui
    ui/tool_view.ui
    ui/spectrum_analyzer_sweep_menu.ui
    ui/spectrum_analyzer_general_menu.ui
    ui/spectrum_analyzer_add_reference_menu.ui
    ui/spectrum_analyzer_markers_menu.ui
    ui/spectrum_analyzer_channel_menu.ui
    ui/network_analyzer_general_menu.ui
    ui/network_analyzer_channel_menu.ui
    ui/logic_analyzer_channel_menu.ui
    ui/logic_pattern_trigger_menu.ui
    ui/logic_analyzer_general_menu.ui
    ui/pattern_generator_channel_menu.ui
    ui/pattern_generator_general_menu.ui
    # resources
    resources/resources.qrc
)

# MOC hack in order to have the header files in include/scopy/gui
file(GLOB_RECURSE HEADERS_TO_MOC
     ${CMAKE_CURRENT_SOURCE_DIR}/include/scopy/gui/*.hpp
     ${CMAKE_CURRENT_SOURCE_DIR}/include/scopy/gui/*.h
)
qt5_wrap_cpp(
    gui_moc
    ${HEADERS_TO_MOC}
    TARGET
    gui
    OPTIONS
    --no-notes
)
target_sources(gui PRIVATE ${gui_moc})
# end MOC hack

set_target_properties(
    gui PROPERTIES AUTOUIC_SEARCH_PATHS ${CMAKE_CURRENT_SOURCE_DIR}/ui
)

target_include_directories(
    gui
    PUBLIC $<INSTALL_INTERFACE:include>
           $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
           ${IIO_INCLUDE_DIRS}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src
)

target_link_libraries(
    gui
    PRIVATE scopy::core
            Qt${QT_VERSION_MAJOR}::Widgets
            Qt${QT_VERSION_MAJOR}::Concurrent
            Qt${QT_VERSION_MAJOR}::Xml
            project_options
            project_warnings
            qwt::qwt
    PUBLIC ${IIO_LIBRARIES}
           gnuradio::gnuradio-runtime
           ${Boost_LIBRARIES}
           ${LIBSIGROK_DECODE_LIBRARIES}
           ${GLIBMM_LIBRARIES}
           ${SIGCPP_LIBRARIES}
           ${GLIB_LIBRARIES}
           libm2k::libm2k
)

add_library(scopy::gui ALIAS gui)

add_subdirectory(tests)
